const n=JSON.parse('{"key":"v-1f04a924","path":"/cs107e/uart_c.html","title":"uart.c 的代码","lang":"zh-CN","frontmatter":{"lang":"zh-CN","title":"uart.c 的代码","description":"看一遍uart.c的代码"},"headers":[{"level":2,"title":"module","slug":"module","link":"#module","children":[]},{"level":2,"title":"uart_reinit_custom","slug":"uart-reinit-custom","link":"#uart-reinit-custom","children":[]},{"level":2,"title":"confirm_uart_initalized","slug":"confirm-uart-initalized","link":"#confirm-uart-initalized","children":[]},{"level":2,"title":"uart_reinit_custom","slug":"uart-reinit-custom-1","link":"#uart-reinit-custom-1","children":[]}],"git":{"updatedTime":1705288313000,"contributors":[{"name":"Jiyi","email":"jiyilc.sd@chinatelecom.cn","commits":1}]},"filePathRelative":"cs107e/uart_c.md","excerpt":"<h1> 接着<a href=\\"/cs107e/static-assert.html\\" target=\\"blank\\">_Static_assert</a>看一遍uart.c的代码（未完成）</h1>\\n<h2> module</h2>\\n<div class=\\"language-c line-numbers-mode\\" data-ext=\\"c\\"><pre class=\\"language-c\\"><code><span class=\\"token keyword\\">typedef</span> <span class=\\"token keyword\\">struct</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">int</span> index<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token class-name\\">gpio_id_t</span> tx<span class=\\"token punctuation\\">,</span> rx<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">unsigned</span> <span class=\\"token keyword\\">int</span> fn<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span> <span class=\\"token class-name\\">uart_config_t</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">static</span> <span class=\\"token keyword\\">struct</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">volatile</span> <span class=\\"token class-name\\">uart_t</span> <span class=\\"token operator\\">*</span>uart_base<span class=\\"token punctuation\\">,</span> <span class=\\"token operator\\">*</span>uart<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token class-name\\">uart_config_t</span> config<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span> module <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token punctuation\\">.</span>uart_base <span class=\\"token operator\\">=</span> UART_BASE<span class=\\"token punctuation\\">,</span>\\n             <span class=\\"token punctuation\\">.</span>uart <span class=\\"token operator\\">=</span> <span class=\\"token constant\\">NULL</span><span class=\\"token punctuation\\">,</span> <span class=\\"token comment\\">// will be set in uart_init</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{n as data};
